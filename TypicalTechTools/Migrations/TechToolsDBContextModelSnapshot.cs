// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TypicalTechTools.Models.Data;

#nullable disable

namespace TypicalTechTools.Migrations
{
    [DbContext(typeof(TechToolsDBContext))]
    partial class TechToolsDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TypicalTechTools.Models.AdminUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AdminUsers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "Test@email.com",
                            Password = "$2a$11$SB.Ji90.ZIqJh6/qaWhe5OL1L2J3AQYCxl6Xh0PKpHUI.Hw8Xq7.O",
                            UserName = "Alex"
                        });
                });

            modelBuilder.Entity("TypicalTechTools.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ProductsId")
                        .HasColumnType("int");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProductsId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = 12345,
                            Text = "This is a great product. Highly Recommended."
                        },
                        new
                        {
                            Id = 2,
                            Code = 12350,
                            Text = "Not worth the excessive price. Stick with a cheaper generic one."
                        },
                        new
                        {
                            Id = 3,
                            Code = 12345,
                            Text = "A great budget buy. As good as some of the expensive alternatives."
                        },
                        new
                        {
                            Id = 4,
                            Code = 12347,
                            Text = "Total garbage. Never buying this brand again."
                        });
                });

            modelBuilder.Entity("TypicalTechTools.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("SessionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = 12345,
                            Description = "bluetooth headphones with fair battery life and a 1 month warranty",
                            Name = "Generic Headphones",
                            Price = 84.989999999999995
                        },
                        new
                        {
                            Id = 2,
                            Code = 12346,
                            Description = "bluetooth headphones with good battery life and a 6 month warranty",
                            Name = "Expensive Headphones",
                            Price = 149.99000000000001
                        },
                        new
                        {
                            Id = 3,
                            Code = 12347,
                            Description = "bluetooth headphones with good battery life and a 12 month warranty",
                            Name = "Name Brand Headphones",
                            Price = 199.99000000000001
                        },
                        new
                        {
                            Id = 4,
                            Code = 12348,
                            Description = "simple bluetooth pointing device",
                            Name = "Generic Wireless Mouse",
                            Price = 39.990000000000002
                        },
                        new
                        {
                            Id = 5,
                            Code = 12349,
                            Description = "mouse and keyboard wired combination",
                            Name = "Logitach Mouse and Keyboard",
                            Price = 73.989999999999995
                        },
                        new
                        {
                            Id = 6,
                            Code = 12350,
                            Description = "quality wireless mouse",
                            Name = "Logitach Wireless Mouse",
                            Price = 149.99000000000001
                        });
                });

            modelBuilder.Entity("TypicalTechTools.Models.Comment", b =>
                {
                    b.HasOne("TypicalTechTools.Models.Product", "Products")
                        .WithMany("Comments")
                        .HasForeignKey("ProductsId");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("TypicalTechTools.Models.Product", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
